basePath: /realtime-chat/api/v1
definitions:
  dto.ErrorMessage:
    properties:
      description:
        type: string
      message:
        type: string
    type: object
  dto.RequestUserUpdate:
    properties:
      _id:
        type: object
      firstname:
        type: string
      lastname:
        type: string
      newpassword:
        type: string
      oldpassword:
        type: string
    required:
    - firstname
    - lastname
    - newpassword
    - oldpassword
    type: object
  dto.SuccessMessage:
    properties:
      id:
        type: object
      message:
        type: string
    type: object
  dto.User:
    properties:
      _id:
        type: object
      firstname:
        type: string
      lastname:
        type: string
      username:
        type: string
    type: object
  model.ChatRoom:
    properties:
      _id:
        type: string
      name:
        type: string
    type: object
  model.Message:
    properties:
      _id:
        type: string
      body:
        type: string
      chatroom_id:
        type: string
      user_id:
        type: string
    type: object
  model.User:
    properties:
      _id:
        type: string
      firstname:
        type: string
      lastname:
        type: string
      password:
        type: string
      username:
        type: string
    type: object
info:
  contact: {}
  description: This microservice serves as Realtime chat backend
  title: RealTime-Chat Microservice
  version: "1"
paths:
  /chat-rooms:
    delete:
      description: Delete chat room by id mongo db
      parameters:
      - description: room id
        in: path
        name: roomid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.SuccessMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      summary: Delete new chat room API
    get:
      description: Get chat room by id
      parameters:
      - description: room id
        in: path
        name: roomid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/model.ChatRoom'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      summary: Get chat room by id API
    post:
      description: Create new chat room and saves in mongo db
      parameters:
      - description: Request body Chat Room details
        in: body
        name: ChatRoom
        required: true
        schema:
          $ref: '#/definitions/model.ChatRoom'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.SuccessMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      summary: Create new chat room API
    put:
      description: Update new chat room and saves in mongo db
      parameters:
      - description: room id
        in: path
        name: roomid
        required: true
        type: string
      - description: Request body Chat Room details
        in: body
        name: ChatRoom
        required: true
        schema:
          $ref: '#/definitions/model.ChatRoom'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.SuccessMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      summary: Update chat room API
  /messages:
    post:
      description: Create new message and saves in mongo db
      parameters:
      - description: Request body has message details
        in: body
        name: Message
        required: true
        schema:
          $ref: '#/definitions/model.Message'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.SuccessMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      summary: Create new message API
  /users:
    get:
      description: Get user by id
      parameters:
      - description: user id
        in: path
        name: uid
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.User'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      summary: Get user by id API
    post:
      description: Create new user and saves in mongo db
      parameters:
      - description: Request body has user details
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/model.User'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.SuccessMessage'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      summary: Create new user API
  /users/{uid}:
    put:
      description: Update user and saves in mongo db
      parameters:
      - description: user id
        in: path
        name: userid
        required: true
        type: string
      - description: Request body user details
        in: body
        name: User
        required: true
        schema:
          $ref: '#/definitions/dto.RequestUserUpdate'
      produces:
      - application/json
      responses:
        "200":
          description: Success
          schema:
            $ref: '#/definitions/dto.SuccessMessage'
        "401":
          description: Wrong Password
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/dto.ErrorMessage'
      summary: Update User API
swagger: "2.0"
